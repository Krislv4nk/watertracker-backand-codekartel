{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "WaterTracker",
    "description": "Showing of WaterTracker points"
  },
  "servers": [
    { "url": "https://watertracker-backand-codekartel.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "WaterRate",
      "description": "WaterRate endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    },
    {
      "name": "Today",
      "description": "Today endpoints"
    },
    {
      "name": "Month",
      "description": "Month endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "user registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful, no content to return."
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Month"],
        "summary": "The user received information for the month",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": "true",
            "type": "string",
            "description": "users year and month"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user`s avatar",
        "description": "Allows users to update their avatar image.",
        "security": [{ "Bearer": [] }],
        "params": [],
        "requestBody": {
          "description": "Avatar image to upload",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request if the file is not provided or the request format is incorrect."
          },
          "401": {
            "description": "Unauthorized if the user is not authenticated."
          },
          "500": {
            "description": "Internal server error if there is an error during the process."
          }
        }
      }
    },
    "users/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user data",
        "description": "Allows authenticated users to update their profile information such as email, name, and password.",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters or missing required fields."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "users/info": {
      "get": {
        "tags": ["User"],
        "summary": "Get user information",
        "description": "Retrieves detailed information about the user based on their authentication token.",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successfully retrieved user information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "water/today": {
      "get": {
        "tags": ["Water"],
        "summary": "Get today's water consumption",
        "description": "Retrieves the percentage of daily water norm consumed today along with individual records of water intake.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption data for today.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "percentOfDailyNorm": {
                      "type": "number",
                      "description": "The percentage of daily water norm that has been consumed today."
                    },
                    "arrayValues": {
                      "type": "array",
                      "description": "List of water consumption records for today.",
                      "items": {
                        "$ref": "#/components/schemas/WaterRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "water/add": {
      "post": {
        "tags": ["Water"],
        "summary": "Add a water record",
        "description": "Adds a new water intake record for the authenticated user, recording the amount of water and the time it was consumed.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["value", "time"],
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "Amount of water in mililiters consumed.",
                    "example": 250
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of the water intake, usually in HH:mm format.",
                    "example": "10:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water record added successfully"
                    },
                    "result": {
                      "$ref": "#/components/schemas/WaterRecord"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed to find the required user data."
          },
          "400": {
            "description": "Bad request. Missing or invalid parameters in the request body."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          }
        }
      }
    },
    "water/{id}": {
      "patch": {
        "patch": {
          "tags": ["Water"],
          "summary": "Update a water record",
          "description": "Updates the details of an existing water record identified by its ID, including the value and time of water intake.",
          "security": [
            {
              "Bearer": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the water record to update."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "Amount of water in mililiters to update in the record.",
                      "example": 150
                    },
                    "time": {
                      "type": "string",
                      "description": "Time of the water intake, typically in HH:mm format.",
                      "example": "14:30"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the water record.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Water record is updated successfully"
                      },
                      "waterRecordToUpdate": {
                        "$ref": "#/components/schemas/WaterRecord"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Water record not found."
            },
            "401": {
              "description": "Unauthorized. The user is not logged in or the token is invalid."
            }
          }
        }
      },
      "delete": {
        "delete": {
          "tags": ["Water"],
          "summary": "Delete a water record",
          "description": "Deletes a specific water record by its ID and updates the total water consumed for the day accordingly.",
          "security": [
            {
              "Bearer": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The unique identifier of the water record to delete."
            }
          ],
          "responses": {
            "200": {
              "description": "The water record was deleted successfully, and the total water for the day was updated.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "The information on the water intake below deleted successfully."
                      },
                      "deletedRecord": {
                        "$ref": "#/components/schemas/WaterRecord"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not found. No record exists with the provided ID."
            },
            "401": {
              "description": "Unauthorized. The user is not logged in or the token is invalid."
            }
          }
        }
      }
    },

    "water/calc": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Update user's daily water consumption rate",
        "description": "Updates the user's daily water consumption rate. This rate should not exceed 15 liters or be less than 1 milliliter. The provided value is used to adjust the user's water consumption targets.",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amountOfWater"],
                "properties": {
                  "amountOfWater": {
                    "type": "number",
                    "description": "The amount of water in liters that the user plans to consume daily.",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption rate updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedUser": {
                      "$ref": "#/components/schemas/WaterRateResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid water rate provided; the rate must be between 1 milliliter and 15 liters."
          },
          "404": {
            "description": "User not found or not available."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Congratulations! Login successful!"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "user`s name"
              },
              "id": {
                "type": "string",
                "example": "125fggfb545bgd"
              }
            }
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's new email address"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "other": {
            "type": "string",
            "description": "other"
          }
        }
      },
      "UserUpdateResponse": {},
      "AvatarsRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "The image file to upload as the user's avatar."
          }
        }
      },
      "AvatarsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Avatar updated successfully!"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://example.com/path/to/new/avatar.jpg"
          }
        }
      },
      "MonthResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "User's date",
              "example": "5, April"
            },
            "dailyNorm": {
              "type": "integer",
              "description": "User's daily water requirement",
              "example": "1.8 L"
            },
            "percentOfDailyNorm": {
              "type": "integer",
              "description": "The percentage of consumed water from the daily norm",
              "example": "60%"
            },
            "recordsCount": {
              "type": "integer",
              "description": "The number of times there were records of water consumption",
              "example": "6"
            }
          }
        }
      },
      "WaterResponse": {},
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user."
          },
          "email": {
            "type": "string",
            "description": "User's email address."
          },
          "name": {
            "type": "string",
            "description": "User's full name."
          }
        }
      },
      "WaterRateResponse": {},
      "WaterRecord": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },

          "value": {
            "type": "number",
            "description": "Amount of water consumed in this record in liters."
          },
          "time": {
            "type": "string",
            "description": "Time when the water was consumed."
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
