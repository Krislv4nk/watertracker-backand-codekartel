{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "WaterTracker",
    "description": "Showing of WaterTracker points"
  },
  "servers": [
    { "url": "https://watertracker-backand-codekartel.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "WaterRate",
      "description": "WaterRate endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    },
    {
      "name": "Today",
      "description": "Today endpoints"
    },
    {
      "name": "Month",
      "description": "Month endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "user registration",
        "description": "Creates a new user account with the provided email and password.",
        "requestBody": {
          "description": "User's email and password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "400": {
            "description": "Invalid request data",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/users/restore": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send password restore email",
        "description": "Sends an email to the user with a link to restore their password if the provided email is associated with an account.",
        "requestBody": {
          "description": "Email of the user who wants to restore their password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email successfully sent to the user's email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Message sent to example@example.com"
                    },
                    "passwordResetToken": {
                      "type": "string",
                      "example": "12345678.123456783.123456788"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required field email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required field email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or email is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found or email is wrong!!!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password/{token}": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset user password",
        "description": "Allows users to reset their password using a valid reset token they received by email.",
        "requestBody": {
          "description": "New password details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your password has been changed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired reset token provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired reset token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access, token has expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The reset link has expired. Please request a new password reset."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful, no content to return."
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Month"],
        "summary": "The user received information for the month",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": "true",
            "type": "string",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}$",
              "example": "2024-04"
            },
            "description": "Year and month input formatted as YYYY-MM"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user`s avatar",
        "description": "Allows users to update their avatar image.",
        "security": [{ "Bearer": [] }],
        "params": [],
        "requestBody": {
          "description": "Avatar image to upload",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request if the file is not provided or the request format is incorrect."
          },
          "401": {
            "description": "Unauthorized if the user is not authenticated."
          },
          "500": {
            "description": "Internal server error if there is an error during the process."
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user's profile information",
        "description": "Allows authenticated users to update their profile information such as email, name, and password.",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Errors related to invalid input or missing required fields"
          },
          "401": {
            "description": "Unauthorized - Current password is incorrect"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error - Issues with the server"
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "tags": ["User"],
        "summary": "Get user information",
        "description": "Retrieves the authenticated user's personal information.",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful retrieval of user information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": ["Today"],
        "summary": "Get today's water consumption",
        "description": "Retrieves the percentage of daily water norm consumed today along with individual records of water intake.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption data for today.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "percentOfDailyNorm": {
                      "type": "number",
                      "description": "The percentage of daily water norm that has been consumed today."
                    },
                    "arreyWaterRecords": {
                      "type": "array",
                      "description": "List of water consumption records for today.",
                      "items": {
                        "$ref": "#/components/schemas/WaterRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "tags": ["Water"],
        "summary": "Add a water record",
        "description": "Adds a new water intake record for the authenticated user, recording the amount of water and the time it was consumed.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["value", "time"],
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "Amount of water in mililiters consumed.",
                    "example": 250
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of the water intake, usually in HH:mm format.",
                    "example": "10:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water record added successfully"
                    },
                    "addedWaterRecord": {
                      "$ref": "#/components/schemas/WaterRecord"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed to find the required user data."
          },
          "400": {
            "description": "Bad request. Missing or invalid parameters in the request body."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": ["Water"],
        "summary": "Update a water record",
        "description": "Updates the details of an existing water record identified by its ID, including the value and time of water intake.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the water record to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "Amount of water in mililiters to update in the record.",
                    "example": 150
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of the water intake, typically in HH:mm format.",
                    "example": "14:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water record is updated successfully"
                    },
                    "updatedWaterRecord": {
                      "$ref": "#/components/schemas/WaterRecord"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Water record not found."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          }
        }
      },
      "delete": {
        "tags": ["Water"],
        "summary": "Delete a water record",
        "description": "Deletes a specific water record by its ID and updates the total water consumed for the day accordingly.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the water record to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "The water record was deleted successfully, and the total water for the day was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The information on the water intake below deleted successfully."
                    },
                    "deletedWaterRecord": {
                      "$ref": "#/components/schemas/WaterRecord"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found. No record exists with the provided ID."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          }
        }
      }
    },
    "/water/calc": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Update user's daily water consumption rate",
        "description": "Updates the user's daily water consumption rate. This rate should not exceed 15 liters or be less than 1. The provided value is used to adjust the user's water consumption targets.",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amountOfWater"],
                "properties": {
                  "amountOfWater": {
                    "type": "number",
                    "description": "The amount of water in liters that the user plans to consume daily.",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption rate updated successfully. Returns the new water rate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "New water rate"
                    },
                    "waterRate": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Provided water rate is out of the acceptable range (less than 1ml or more than 15l)."
          },
          "401": {
            "description": "Unauthorized. The user is not logged in or the token is invalid."
          },
          "404": {
            "description": "Not found. No user found with the provided ID."
          },
          "500": {
            "description": "Internal Server Error. An error occurred while processing the request."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address for user registration"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for user registration"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Congratulations! You have successfully registered!"
          },
          "newUser": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the user."
              },
              "email": {
                "type": "string",
                "description": "Email address of the user."
              },
              "token": {
                "type": "string",
                "description": "JWT token for the user."
              },
              "avatarURL": {
                "type": "string",
                "description": "URL of the user's avatar image, if any."
              },
              "name": {
                "type": "string",
                "description": "Full name of the user."
              },
              "gender": {
                "type": "string",
                "description": "Gender of the user."
              },
              "waterRate": {
                "type": "number",
                "description": "User's daily water rate in liters."
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Congratulations! Login successful!"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "user`s name"
              },
              "id": {
                "type": "string",
                "example": "125fggfb545bgd"
              }
            }
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "New email address for the user"
          },
          "oldPassword": {
            "type": "string",
            "format": "password",
            "description": "Current password (required for changing password)"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "description": "New password for the user"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User's gender"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User information updated successfully, including password"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User's email address"
              },
              "gender": {
                "type": "string",
                "description": "User's gender"
              },
              "name": {
                "type": "string",
                "description": "User's full name"
              },
              "waterRate": {
                "type": "number",
                "description": "User's daily water consumption rate in liters"
              }
            }
          }
        }
      },
      "AvatarsRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "The image file to upload as the user's avatar."
          }
        }
      },
      "AvatarsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Avatar updated successfully!"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://example.com/path/to/new/avatar.jpg"
          }
        }
      },
      "MonthResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "User's date",
              "example": "5, April"
            },
            "dailyNorm": {
              "type": "integer",
              "description": "User's daily water requirement",
              "example": "1.8 L"
            },
            "percentOfDailyNorm": {
              "type": "integer",
              "description": "The percentage of consumed water from the daily norm",
              "example": "60%"
            },
            "recordsCount": {
              "type": "integer",
              "description": "The number of times there were records of water consumption",
              "example": "6"
            }
          }
        }
      },
      "UserEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user requesting password restoration"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": ["token", "newPassword"],
        "properties": {
          "token": {
            "type": "string",
            "description": "The reset token received by email."
          },
          "newPassword": {
            "type": "string",
            "description": "The new password for the user account."
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "6625111cca51ed42cd525bb5",
                "description": "Unique identifier for the user."
              },
              "email": {
                "type": "string",
                "example": "name@gmail.com",
                "description": "Email address of the user."
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MjUxMTFjY2E1MWVkNDJjZDUyNWJiNSIsImlhdCI6MTcxMzcwNTI0NCwiZXhwIjoxNzEzNzg4MDQ0fQ.HwzUXt6BtaxUsQ4W8FknIE-0j7vfOw12Bh7ANUQxhwM",
                "description": "JWT token for the user."
              },
              "avatarURL": {
                "type": "string",
                "example": null,
                "description": "URL of the user's avatar image, if any."
              },
              "name": {
                "type": "string",
                "example": null,
                "description": "Full name of the user."
              },
              "gender": {
                "type": "string",
                "example": "other",
                "description": "Gender of the user."
              },
              "waterRate": {
                "type": "number",
                "example": 2,
                "description": "User's daily water rate in liters."
              }
            }
          }
        }
      },
      "WaterRateResponse": {},
      "WaterRecord": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Amount of water consumed in this record in liters."
          },
          "time": {
            "type": "string",
            "description": "Time when the water was consumed."
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
